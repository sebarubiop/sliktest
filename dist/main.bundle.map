{"version":3,"sources":["webpack:///./src/polyfills.ts?5d2d","webpack:///./src/app/posts.service.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/file-upload-section.ts","webpack:///./src/app/components/file-upload/simple-demo.ts","webpack:///./src/environments/environment.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/components/file-upload-section.html","webpack:///./src/app/components/file-upload/simple-demo.html","webpack:///./src/app/components/file-upload/file-catcher.js","webpack:///./src/app/components/file-upload/simple-demo.html?5a7f","webpack:///./src/app/components/file-upload/simple-demo.ts?7a6e"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAE2B;AACA;AACE;AACC;AACE;AACL;AACF;AACE;AACF;AACC;AACC;AACH;AACA;AACI;AAEA;AACF;AAE1B,2EAA2E;AAC3E,0CAA0C;AAC1C,6EAA6E;AAE7E,kBAAkB;AAClB,yBAAyB;AAEzB,aAAa;AACb,+DAA+D;AAC/D,8BAA8B;AAE9B,4CAA4C;AAC5C,gEAAgE;AAChE,iBAAiB;AAEjB,0BAA0B;AAC1B,yBAAyB;AACzB,yBAAyB;;;;;;;;;;;;;;;;;;;;;;;ACrCiB;AACN;AACN;AAG9B;IAEE,sBAAoB,IAAU;QAAV,SAAI,GAAJ,IAAI,CAAM;IAAI,CAAC;IAEnC,6BAA6B;IAC7B,kCAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC;aAC/B,GAAG,CAAC,aAAG,IAAI,UAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;IAC5B,CAAC;IATH;QAAC,gFAAU,EAAE;;oBAAA;IAUb,mBAAC;;AAAD,CAAC;;;;;;;;ACdD;AACA;AACA;AACA,uCAAuC,WAAW;AAClD;AACA;AACA;;;;;;;;;;;;;;;ACNuB;AAEmD;AAC5B;AACU;AACZ;AAE5C,EAAE,CAAC,CAAC,8EAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oFAAc,EAAE,CAAC;AACnB,CAAC;AAED,wHAAsB,EAAE,CAAC,eAAe,CAAC,kEAAS,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;ACXX;AACK;AAO9C;IAME,sBAAoB,YAA0B;QAA1B,iBAAY,GAAZ,YAAY,CAAc;QAHhD,sCAAsC;QACpC,UAAK,GAAQ,EAAE,CAAC;IAEkC,CAAC;IAEnD,+BAAQ,GAAR;QAAA,iBAKC;QAJC,8BAA8B;QAC9B,IAAI,CAAC,YAAY,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,eAAK;YAC7C,KAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACrB,CAAC,CAAC,CAAC;IACL,CAAC;IAlBH;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,kCAAmC;YACnC,kCAAkC;SACnC,CAAC;;oBAAA;IAeF,mBAAC;;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtB6C;AACW;AACjB;AACI;AACF;AAEK;AACG;AAGJ;AAC+B;AACH;AAG5B;AAE9C,uBAAuB;AACvB,mBAAmB;AACnB,MAAM;AACN,gBAAgB;AAChB,2BAA2B;AAC3B,wBAAwB;AACxB,OAAO;AACP,MAAM;AACN,qBAAqB;AACrB,gCAAgC;AAChC,MAAM;AACN,KAAK;AAYL;IAAA;IAAyB,CAAC;IAV1B;QAAC,8EAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,oEAAY,EAAE,mGAA0B,EAAE,gGAAmB;aAC9D;YACD,OAAO,EAAE;gBACP,gFAAa,EAAE,6DAAY,EAAE,iEAAgB,EAAE,sEAAU,CAAC,OAAO,EAAE,EAAE,mEAAW,EAAC,iEAAU;aAC5F;YACD,SAAS,EAAE,CAAC,qEAAY,CAAC;YACzB,SAAS,EAAE,CAAC,oEAAY,CAAC;SAC1B,CAAC;;iBAAA;IACuB,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;ACxCe;AAEzC,IAAI,OAAO,GAAc;IACvB;QACE,OAAO,EAAE,QAAQ;QACjB,EAAE,EAAE,mBAAO,CAAC,GAA2D,CAAC;QACxE,IAAI,EAAE,mBAAO,CAAC,GAAyD,CAAC;QACxE,EAAE,EAAE,mBAAO,CAAC,GAA4D,CAAC;KAC1E;CACF,CAAC;AAMF;IAAA;QACS,SAAI,GAAU,aAAa,CAAC;QAC5B,mBAAc,GAAU,QAAQ,CAAC;QACjC,SAAI,GAAO,OAAO,CAAC;IAO5B,CAAC;IALQ,2CAAM,GAAb,UAAc,CAAK;QACjB,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACd,IAAI,CAAC,cAAc,GAAG,CAAC,CAAC,OAAO,CAAC;QAClC,CAAC;IACH,CAAC;IAbH;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,kCAAyC;SAC1C,CAAC;;kCAAA;IAWF,iCAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;ACzBwC;AACK;AAE9C,uBAAuB;AACvB,IAAM,GAAG,GAAG,aAAa,CAAC;AAC1B,kCAAkC;AAClC,wBAAwB;AAMxB;IAAA;QACS,aAAQ,GAAgB,IAAI,6DAAY,CAAC,EAAC,GAAG,EAAE,GAAG,EAAC,CAAC,CAAC;QACrD,wBAAmB,GAAW,KAAK,CAAC;QACpC,2BAAsB,GAAW,KAAK,CAAC;IAShD,CAAC;IAPQ,0CAAY,GAAnB,UAAoB,CAAK;QACvB,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;IAC/B,CAAC;IAEM,6CAAe,GAAtB,UAAuB,CAAK;QAC1B,IAAI,CAAC,sBAAsB,GAAG,CAAC,CAAC;IAClC,CAAC;IAfH;QAAC,+EAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,kCAAiC;SAClC,CAAC;;2BAAA;IAaF,0BAAC;AAAD,CAAC;;;;;;;;;ACxBD;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,+EAA+E;AAExE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF,mB;;;;;;;ACAA,qnCAAqnC,cAAc,sCAAsC,WAAW,+b;;;;;;;ACAprC,4JAA4J,cAAc,qOAAqO,6NAA6N,WAAW,4PAA4P,SAAS,gZAAgZ,SAAS,oV;;;;;;;ACArxC,gDAAgD,8BAA8B,EAAE,uBAAuB,wBAAwB,EAAE,oFAAoF,0BAA0B,EAAE,wBAAwB,cAAc,EAAE,oaAAoa,oCAAoC,qRAAqR,kDAAkD,wlBAAwlB,2BAA2B,seAAse,oBAAoB,8EAA8E,4CAA4C,4IAA4I,iGAAiG,+BAA+B,8uDAA8uD,mCAAmC,ogC;;;;;;;ACA5yI,yEAAyE,mCAAmC,2BAA2B,wBAAwB,+BAA+B,6BAA6B,UAAU,EAAE,2CAA2C,sFAAsF,4DAA4D,qFAAqF,8DAA8D,aAAa,KAAK,EAAE,wBAAwB,8DAA8D,qCAAqC,OAAO,2CAA2C,4DAA4D,OAAO,8CAA8C,mEAAmE,OAAO,KAAK,GAAG,6CAA6C,sCAAsC,KAAK,EAAE,8CAA8C,uCAAuC,kBAAkB,yCAAyC,SAAS,wCAAwC,OAAO,EAAE,KAAK,EAAE,4CAA4C,sCAAsC,6CAA6C,KAAK,EAAE,K;;;;;;;ACA52C,gDAAgD,8BAA8B,EAAE,uBAAuB,wBAAwB,EAAE,oFAAoF,0BAA0B,EAAE,wBAAwB,cAAc,EAAE,oaAAoa,oCAAoC,qRAAqR,kDAAkD,wlBAAwlB,2BAA2B,seAAse,oBAAoB,8EAA8E,4CAA4C,4IAA4I,iGAAiG,+BAA+B,8uDAA8uD,mCAAmC,ogC;;;;;;;ACA5yI,0BAA0B,YAAY,sBAAsB,YAAY,eAAe,wBAAwB,+BAA+B,8BAA8B,sFAAsF,0EAA0E,uCAAuC,uDAAuD,SAAS,EAAE,iDAAiD,oDAAoD,2CAA2C,qCAAqC,OAAO,8CAA8C,wCAAwC,OAAO,KAAK,K","file":"main.bundle.js","sourcesContent":["// This file includes polyfills needed by Angular and is loaded before the app.\n// You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n// If you need to support the browsers/features below, uncomment the import\n// and run `npm install import-name-here';\n// Learn more in https://angular.io/docs/ts/latest/guide/browser-support.html\n\n// Needed for: IE9\n// import 'classlist.js';\n\n// Animations\n// Needed for: All but Chrome and Firefox, Not supported in IE9\n// import 'web-animations-js';\n\n// Date, currency, decimal and percent pipes\n// Needed for: All but Chrome, Firefox, Edge, IE11 and Safari 10\n// import 'intl';\n\n// NgClass on SVG elements\n// Needed for: IE10, IE11\n// import 'classlist.js';\n\n\n\n// WEBPACK FOOTER //\n// ./src/polyfills.ts","import { Injectable } from '@angular/core';\nimport { Http } from '@angular/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class PostsService {\n\n  constructor(private http: Http) { }\n\n  // Get all posts from the API\n  getAllPosts() {\n    return this.http.get('/api/posts')\n      .map(res => res.json());\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/posts.service.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 508;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 508\n// module chunks = 1","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport { PostsService } from './posts.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n\n// instantiate posts to an empty array\n  posts: any = [];\n\n  constructor(private postsService: PostsService) { }\n\n  ngOnInit() {\n    // Retrieve posts from the API\n    this.postsService.getAllPosts().subscribe(posts => {\n      this.posts = posts;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { CommonModule } from '@angular/common';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { FileUploadModule } from 'ng2-file-upload';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { FileUploadSectionComponent } from './components/file-upload-section';\nimport { SimpleDemoComponent } from './components/file-upload/simple-demo';\nimport { PostsComponent } from './posts/posts.component';\n\nimport { PostsService } from './posts.service';\n\n// // Define the routes\n// const ROUTES = [\n//   {\n//     path: '',\n//     redirectTo: 'posts',\n//     pathMatch: 'full'\n//   },\n//   {\n//     path: 'posts',\n//     component: PostsComponent\n//   }\n// ];\n\n@NgModule({\n  declarations: [\n    AppComponent, FileUploadSectionComponent, SimpleDemoComponent\n  ],\n  imports: [\n    BrowserModule, CommonModule, FileUploadModule, TabsModule.forRoot(), FormsModule,HttpModule\n  ],\n  providers: [PostsService], // Add the posts service\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Component } from '@angular/core';\r\n\r\nlet tabDesc:Array<any> = [\r\n  {\r\n    heading: 'Simple',\r\n    ts: require('!!raw-loader?lang=typescript!./file-upload/simple-demo.ts'),\r\n    html: require('!!raw-loader?lang=markup!./file-upload/simple-demo.html'),\r\n    js: require('!!raw-loader?lang=javascript!./file-upload/file-catcher.js')\r\n  }\r\n];\r\n\r\n@Component({\r\n  selector: 'file-upload-section',\r\n  templateUrl: './file-upload-section.html'\r\n})\r\nexport class FileUploadSectionComponent {\r\n  public name:string = 'File Upload';\r\n  public currentHeading:string = 'Simple';\r\n  public tabs:any = tabDesc;\r\n\r\n  public select(e:any):void {\r\n    if (e.heading) {\r\n      this.currentHeading = e.heading;\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/file-upload-section.ts","import { Component } from '@angular/core';\r\nimport { FileUploader } from 'ng2-file-upload';\r\n\r\n// const URL = '/api/';\r\nconst URL = '/api/upload';\r\n// https://slik-test.herokuapp.com\r\n// http://localhost:3000\r\n\r\n@Component({\r\n  selector: 'simple-demo',\r\n  templateUrl: './simple-demo.html'\r\n})\r\nexport class SimpleDemoComponent {\r\n  public uploader:FileUploader = new FileUploader({url: URL});\r\n  public hasBaseDropZoneOver:boolean = false;\r\n  public hasAnotherDropZoneOver:boolean = false;\r\n\r\n  public fileOverBase(e:any):void {\r\n    this.hasBaseDropZoneOver = e;\r\n  }\r\n\r\n  public fileOverAnother(e:any):void {\r\n    this.hasAnotherDropZoneOver = e;\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/components/file-upload/simple-demo.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 626\n// module chunks = 1","module.exports = \"<main class=\\\"bd-pageheader\\\">\\n    <div class=\\\"container\\\">\\n      <h1>ng2-file-upload</h1>\\n      <p>The Angular2 File Upload directives</p>\\n      <a class=\\\"btn btn-primary\\\" href=\\\"https://github.com/valor-software/ng2-file-upload\\\">View on GitHub</a>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-1\\\"><iframe src=\\\"https://ghbtns.com/github-btn.html?user=valor-software&repo=ng2-file-upload&type=star&count=true\\\" frameborder=\\\"0\\\" scrolling=\\\"0\\\" width=\\\"170px\\\" height=\\\"20px\\\"></iframe></div>\\n        <div class=\\\"col-lg-1\\\"><iframe src=\\\"https://ghbtns.com/github-btn.html?user=valor-software&repo=ng2-file-upload&type=fork&count=true\\\" frameborder=\\\"0\\\" scrolling=\\\"0\\\" width=\\\"170px\\\" height=\\\"20px\\\"></iframe></div>\\n      </div>\\n    </div>\\n  </main>\\n\\n  <div class=\\\"container\\\">\\n    <section id=\\\"getting-started\\\" [innerHtml]=\\\"gettingStarted\\\"></section>\\n\\n    <file-upload-section class=\\\"col-md-12\\\"></file-upload-section>\\n  </div>\\n\\n  <div class=\\\"container\\\">\\n  <div class=\\\"row\\\" *ngFor=\\\"let post of posts\\\">\\n    <div class=\\\"card card-block\\\">\\n      <h4 class=\\\"card-title\\\">{{ post.title }}</h4>\\n      <p class=\\\"card-text\\\">{{post.body}}</p>\\n      <a href=\\\"#\\\" class=\\\"card-link\\\">Card link</a>\\n      <a href=\\\"#\\\" class=\\\"card-link\\\">Another link</a>\\n    </div>\\n  </div>\\n</div>\\n\\n  <footer class=\\\"footer\\\">\\n    <div class=\\\"container\\\">\\n      <p class=\\\"text-muted text-center\\\"><a href=\\\"https://github.com/valor-software/ng2-file-upload\\\">ng2-file-upload</a> is maintained by <a href=\\\"https://github.com/valor-software\\\">valor-software</a>.</p>\\n    </div>\\n  </footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 627\n// module chunks = 1","module.exports = \"<section [attr.id]=\\\"name.toLowerCase()\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <tabset>\\r\\n      <tab *ngFor=\\\"let desc of tabs\\\" heading=\\\"{{desc.heading}}\\\" (select)=\\\"select($event)\\\">\\r\\n        <div class=\\\"card card-block panel panel-default panel-body\\\">\\r\\n\\r\\n          <simple-demo></simple-demo>\\r\\n\\r\\n          <br>\\r\\n\\r\\n          <div class=\\\"row\\\" style=\\\"margin: 0px;\\\">\\r\\n            <tabset>\\r\\n              <tab heading=\\\"Markup\\\">\\r\\n                <div class=\\\"card card-block panel panel-default panel-body\\\">\\r\\n                  <pre class=\\\"prettyprint linenums lang-html\\\">{{desc.html}}</pre>\\r\\n                </div>\\r\\n              </tab>\\r\\n              <tab heading=\\\"TypeScript\\\">\\r\\n                <div class=\\\"card card-block panel panel-default panel-body\\\">\\r\\n                  <pre class=\\\"prettyprint linenums lang-js\\\">{{desc.ts}}</pre>\\r\\n                  <pre class=\\\"language-typescript\\\"><code class=\\\"language-typescript\\\" ng-non-bindable [innerHTML]=\\\"desc.ts\\\"></code></pre>\\r\\n                </div>\\r\\n              </tab>\\r\\n              <tab heading=\\\"Backend Demo\\\">\\r\\n                <div class=\\\"card card-block panel panel-default panel-body\\\">\\r\\n                  <pre class=\\\"prettyprint linenums lang-js\\\">{{desc.js}}</pre>\\r\\n                </div>\\r\\n              </tab>\\r\\n            </tabset>\\r\\n          </div>\\r\\n        </div>\\r\\n      </tab>\\r\\n    </tabset>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"row\\\">\\r\\n    <h2>API</h2>\\r\\n    <div class=\\\"card card-block panel panel-default panel-body\\\" [innerHTML]=\\\"doc\\\"></div>\\r\\n  </div>\\r\\n</section>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/file-upload-section.html\n// module id = 628\n// module chunks = 1","module.exports = \"<style>\\r\\n    .my-drop-zone { border: dotted 3px lightgray; }\\r\\n    .nv-file-over { border: dotted 3px red; } /* Default class applied to drop zones on over */\\r\\n    .another-file-over-class { border: dotted 3px green; }\\r\\n\\r\\n    html, body { height: 100%; }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n    <div class=\\\"navbar navbar-default\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <a class=\\\"navbar-brand\\\" href>Angular2 File Upload</a>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n\\r\\n            <h3>Select files</h3>\\r\\n\\r\\n            <div ng2FileDrop\\r\\n                 [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\r\\n                 (fileOver)=\\\"fileOverBase($event)\\\"\\r\\n                 [uploader]=\\\"uploader\\\"\\r\\n                 class=\\\"well my-drop-zone\\\">\\r\\n                Base drop zone\\r\\n            </div>\\r\\n\\r\\n            <div ng2FileDrop\\r\\n                 [ngClass]=\\\"{'another-file-over-class': hasAnotherDropZoneOver}\\\"\\r\\n                 (fileOver)=\\\"fileOverAnother($event)\\\"\\r\\n                 [uploader]=\\\"uploader\\\"\\r\\n                 class=\\\"well my-drop-zone\\\">\\r\\n                Another drop zone\\r\\n            </div>\\r\\n\\r\\n            Multiple\\r\\n            <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\r\\n\\r\\n            Single\\r\\n            <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\">\\r\\n\\r\\n            <h3>Upload queue</h3>\\r\\n            <p>Queue length: {{ uploader?.queue?.length }}</p>\\r\\n\\r\\n            <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th width=\\\"50%\\\">Name</th>\\r\\n                    <th>Size</th>\\r\\n                    <th>Progress</th>\\r\\n                    <th>Status</th>\\r\\n                    <th>Actions</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                <tr *ngFor=\\\"let item of uploader.queue\\\">\\r\\n                    <td><strong>{{ item?.file?.name }}</strong></td>\\r\\n                    <td *ngIf=\\\"uploader.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\r\\n                    <td *ngIf=\\\"uploader.isHTML5\\\">\\r\\n                        <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n                            <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\">\\r\\n                        <span *ngIf=\\\"item.isSuccess\\\"><i class=\\\"glyphicon glyphicon-ok\\\"></i></span>\\r\\n                        <span *ngIf=\\\"item.isCancel\\\"><i class=\\\"glyphicon glyphicon-ban-circle\\\"></i></span>\\r\\n                        <span *ngIf=\\\"item.isError\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></span>\\r\\n                    </td>\\r\\n                    <td nowrap>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\"\\r\\n                                (click)=\\\"item.upload()\\\" [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\">\\r\\n                            <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\"\\r\\n                                (click)=\\\"item.cancel()\\\" [disabled]=\\\"!item.isUploading\\\">\\r\\n                            <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\"\\r\\n                                (click)=\\\"item.remove()\\\">\\r\\n                            <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove\\r\\n                        </button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n\\r\\n            <div>\\r\\n                <div>\\r\\n                    Queue progress:\\r\\n                    <div class=\\\"progress\\\" style=\\\"\\\">\\r\\n                        <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\r\\n                        (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload all\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\r\\n                        (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel all\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\r\\n                        (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove all\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/components/file-upload/simple-demo.html\n// module id = 629\n// module chunks = 1","module.exports = \"/*eslint-disable*/\\r\\nvar express = require('express');\\r\\nvar multer = require('multer');\\r\\nvar fs = require('fs');\\r\\nvar app = express();\\r\\n\\r\\nvar DIR = './uploads/';\\r\\n\\r\\nvar upload = multer({dest: DIR});\\r\\n\\r\\napp.use(function (req, res, next) {\\r\\n  res.setHeader('Access-Control-Allow-Origin', 'http://valor-software.github.io');\\r\\n  res.setHeader('Access-Control-Allow-Methods', 'POST');\\r\\n  res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type');\\r\\n  res.setHeader('Access-Control-Allow-Credentials', true);\\r\\n  next();\\r\\n});\\r\\n\\r\\napp.use(multer({\\r\\n  dest: DIR,\\r\\n  rename: function (fieldname, filename) {\\r\\n    return filename + Date.now();\\r\\n  },\\r\\n  onFileUploadStart: function (file) {\\r\\n    console.log(file.originalname + ' is starting ...');\\r\\n  },\\r\\n  onFileUploadComplete: function (file) {\\r\\n    console.log(file.fieldname + ' uploaded to  ' + file.path);\\r\\n  }\\r\\n}));\\r\\n\\r\\napp.get('/api', function (req, res) {\\r\\n  res.end('file catcher example');\\r\\n});\\r\\n\\r\\napp.post('/api', function (req, res) {\\r\\n  upload(req, res, function (err) {\\r\\n    if (err) {\\r\\n      return res.end(err.toString());\\r\\n    }\\r\\n\\r\\n    res.end('File is uploaded');\\r\\n  });\\r\\n});\\r\\n\\r\\nvar PORT = process.env.PORT || 3000;\\r\\n\\r\\napp.listen(PORT, function () {\\r\\n  console.log('Working on port ' + PORT);\\r\\n});\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader?lang=javascript!./src/app/components/file-upload/file-catcher.js\n// module id = 630\n// module chunks = 1","module.exports = \"<style>\\r\\n    .my-drop-zone { border: dotted 3px lightgray; }\\r\\n    .nv-file-over { border: dotted 3px red; } /* Default class applied to drop zones on over */\\r\\n    .another-file-over-class { border: dotted 3px green; }\\r\\n\\r\\n    html, body { height: 100%; }\\r\\n</style>\\r\\n\\r\\n<div class=\\\"container\\\">\\r\\n\\r\\n    <div class=\\\"navbar navbar-default\\\">\\r\\n        <div class=\\\"navbar-header\\\">\\r\\n            <a class=\\\"navbar-brand\\\" href>Angular2 File Upload</a>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n\\r\\n            <h3>Select files</h3>\\r\\n\\r\\n            <div ng2FileDrop\\r\\n                 [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\r\\n                 (fileOver)=\\\"fileOverBase($event)\\\"\\r\\n                 [uploader]=\\\"uploader\\\"\\r\\n                 class=\\\"well my-drop-zone\\\">\\r\\n                Base drop zone\\r\\n            </div>\\r\\n\\r\\n            <div ng2FileDrop\\r\\n                 [ngClass]=\\\"{'another-file-over-class': hasAnotherDropZoneOver}\\\"\\r\\n                 (fileOver)=\\\"fileOverAnother($event)\\\"\\r\\n                 [uploader]=\\\"uploader\\\"\\r\\n                 class=\\\"well my-drop-zone\\\">\\r\\n                Another drop zone\\r\\n            </div>\\r\\n\\r\\n            Multiple\\r\\n            <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" multiple  /><br/>\\r\\n\\r\\n            Single\\r\\n            <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" />\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\">\\r\\n\\r\\n            <h3>Upload queue</h3>\\r\\n            <p>Queue length: {{ uploader?.queue?.length }}</p>\\r\\n\\r\\n            <table class=\\\"table\\\">\\r\\n                <thead>\\r\\n                <tr>\\r\\n                    <th width=\\\"50%\\\">Name</th>\\r\\n                    <th>Size</th>\\r\\n                    <th>Progress</th>\\r\\n                    <th>Status</th>\\r\\n                    <th>Actions</th>\\r\\n                </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                <tr *ngFor=\\\"let item of uploader.queue\\\">\\r\\n                    <td><strong>{{ item?.file?.name }}</strong></td>\\r\\n                    <td *ngIf=\\\"uploader.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\r\\n                    <td *ngIf=\\\"uploader.isHTML5\\\">\\r\\n                        <div class=\\\"progress\\\" style=\\\"margin-bottom: 0;\\\">\\r\\n                            <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': item.progress + '%' }\\\"></div>\\r\\n                        </div>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center\\\">\\r\\n                        <span *ngIf=\\\"item.isSuccess\\\"><i class=\\\"glyphicon glyphicon-ok\\\"></i></span>\\r\\n                        <span *ngIf=\\\"item.isCancel\\\"><i class=\\\"glyphicon glyphicon-ban-circle\\\"></i></span>\\r\\n                        <span *ngIf=\\\"item.isError\\\"><i class=\\\"glyphicon glyphicon-remove\\\"></i></span>\\r\\n                    </td>\\r\\n                    <td nowrap>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-success btn-xs\\\"\\r\\n                                (click)=\\\"item.upload()\\\" [disabled]=\\\"item.isReady || item.isUploading || item.isSuccess\\\">\\r\\n                            <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-warning btn-xs\\\"\\r\\n                                (click)=\\\"item.cancel()\\\" [disabled]=\\\"!item.isUploading\\\">\\r\\n                            <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel\\r\\n                        </button>\\r\\n                        <button type=\\\"button\\\" class=\\\"btn btn-danger btn-xs\\\"\\r\\n                                (click)=\\\"item.remove()\\\">\\r\\n                            <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove\\r\\n                        </button>\\r\\n                    </td>\\r\\n                </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n\\r\\n            <div>\\r\\n                <div>\\r\\n                    Queue progress:\\r\\n                    <div class=\\\"progress\\\" style=\\\"\\\">\\r\\n                        <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\r\\n                        (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-upload\\\"></span> Upload all\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-warning btn-s\\\"\\r\\n                        (click)=\\\"uploader.cancelAll()\\\" [disabled]=\\\"!uploader.isUploading\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-ban-circle\\\"></span> Cancel all\\r\\n                </button>\\r\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\r\\n                        (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\r\\n                    <span class=\\\"glyphicon glyphicon-trash\\\"></span> Remove all\\r\\n                </button>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader?lang=markup!./src/app/components/file-upload/simple-demo.html\n// module id = 631\n// module chunks = 1","module.exports = \"import { Component } from '@angular/core';\\r\\nimport { FileUploader } from 'ng2-file-upload';\\r\\n\\r\\n// const URL = '/api/';\\r\\nconst URL = '/api/upload';\\r\\n// https://slik-test.herokuapp.com\\r\\n// http://localhost:3000\\r\\n\\r\\n@Component({\\r\\n  selector: 'simple-demo',\\r\\n  templateUrl: './simple-demo.html'\\r\\n})\\r\\nexport class SimpleDemoComponent {\\r\\n  public uploader:FileUploader = new FileUploader({url: URL});\\r\\n  public hasBaseDropZoneOver:boolean = false;\\r\\n  public hasAnotherDropZoneOver:boolean = false;\\r\\n\\r\\n  public fileOverBase(e:any):void {\\r\\n    this.hasBaseDropZoneOver = e;\\r\\n  }\\r\\n\\r\\n  public fileOverAnother(e:any):void {\\r\\n    this.hasAnotherDropZoneOver = e;\\r\\n  }\\r\\n}\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader?lang=typescript!./src/app/components/file-upload/simple-demo.ts\n// module id = 632\n// module chunks = 1"],"sourceRoot":""}